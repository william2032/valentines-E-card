{/* <div className="left-container w-full md:w-1/2 flex flex-col mt-[50px] md:mt-10 justify-center backdrop-blur-md bg-gray-800/95 rounded-2xl p-4 shadow-lg border border-gray-700">
                    <h1 className="text-2xl w-[200px] md:w-[70%] mt-[50px] sticky md:mx-6 text-center md:text-4xl font-bold text-white mb-[30px]">Create Your Valentine E-Card</h1>
                    {!preview ? (
                        <div className="bg-gray-900/95 backdrop-blur-md p-8 rounded-3xl shadow-2xl w-full max-w-md border border-gray-700">
                            <label className="block text-lg font-semibold text-white mb-2">Your Message:</label>
                            <textarea
                                className="w-full p-4 border border-gray-600 rounded-xl mt-2 focus:ring-2 focus:ring-red-400 focus:border-transparent transition-all duration-300 shadow-inner bg-gray-800/95 text-white resize-none min-h-[150px] placeholder:text-gray-400 placeholder:italic hover:border-gray-500"
                                rows="4"
                                value={message}
                                onChange={(e) => setMessage(e.target.value)}
                                placeholder="Write something sweet..."
                                maxLength={500}
                            ></textarea>

                            <label className="block text-lg font-semibold text-white mt-6 mb-2">Your Name:</label>
                            <input
                                className="w-full p-4 border border-gray-600 rounded-xl mt-2 focus:ring-2 focus:ring-red-400 focus:border-transparent transition-all duration-300 shadow-inner bg-gray-800/95 text-white placeholder:text-gray-400"
                                value={sender}
                                onChange={(e) => setSender(e.target.value)}
                                placeholder="Secret lover"
                            />

                            <label className="block text-lg font-semibold text-white mt-6 mb-2">Choose a Design:</label>
                            <select
                                className="w-full p-4 border border-gray-600 rounded-xl mt-2 focus:ring-2 focus:ring-red-400 focus:border-transparent transition-all duration-300 shadow-inner bg-gray-800/95 hover:border-gray-500 text-white"
                                value={selectedDesign}
                                onChange={(e) => setSelectedDesign(e.target.value)}
                            >
                                {Object.keys(designs).map((id) => (
                                    <option key={id} value={id} className="bg-gray-800">
                                        {designs[id]}
                                    </option>
                                ))}
                            </select>

                            <button
                                className="bg-gradient-to-r from-red-500 to-pink-500 text-white px-[18px] py-[10px] md:px-8 md:py-4 rounded-xl mt-8 w-full hover:from-red-600 hover:to-pink-600 transform hover:scale-[1.02] transition-all duration-300 shadow-lg font-semibold text-lg"
                                onClick={() => setPreview(true)}
                            >
                                Preview Card âœ¨
                            </button>
                        </div> */}
                        Dark mode


                       ECARD



                        import React, { useState } from "react";
                        import { Link } from "react-router-dom";

                        export default function ECard({ message = "Happy Valentine's Day!", sender = "Secret Lover", design = "romantic" }) {
                            const [isOpen, setIsOpen] = useState(false);

                            // Add design variations
                            const getDesignStyles = () => {
                                switch (design.toLowerCase()) {
                                    case 'romantic':
                                        return {
                                            background: 'bg-gradient-to-br from-red-400 via-pink-400 to-red-300',
                                            textColor: 'text-red-700',
                                            messageStyle: 'font-serif'
                                        };
                                    case 'cute':
                                        return {
                                            background: 'bg-gradient-to-br from-pink-200 via-purple-200 to-pink-100',
                                            textColor: 'text-pink-600',
                                            messageStyle: 'font-comic'
                                        };
                                    case 'friends':
                                        return {
                                            background: 'bg-gradient-to-br from-yellow-200 via-orange-200 to-yellow-100',
                                            textColor: 'text-orange-600',
                                            messageStyle: 'font-sans'
                                        };
                                    default:
                                        return {
                                            background: 'bg-gradient-to-br from-pink-300 via-rose-300 to-red-200',
                                            textColor: 'text-red-600',
                                            messageStyle: 'font-sans'
                                        };
                                }
                            };

                            const designStyles = getDesignStyles();

                            return (
                                <div className={`min-h-screen flex flex-col items-center justify-center p-4 md:p-6 ${designStyles.background} animate-gradient relative`}>

                                    <div className="relative w-full max-w-[350px] md:max-w-[1000px] h-[500px] md:h-[700px]">
                                        <div className={`book-container ${isOpen ? 'book-open' : ''}`}
                                            onClick={() => setIsOpen(!isOpen)}>

                                            {/* Left Page (Cover) */}
                                            <div className={`page left-page ${isOpen ? 'left-page-open' : ''}`}>
                                                <div className="relative h-full">
                                                    <img
                                                        src="/bear-hug.jpeg"
                                                        alt="bear hug"
                                                        className="h-full w-full object-cover rounded-2xl md:rounded-l-2xl md:rounded-r-none"
                                                    />
                                                </div>
                                            </div>

                                            {/* Right Page (Message) */}
                                            <div className="page right-page">
                                                <div className="bg-white h-full p-4 md:p-6 rounded-2xl md:rounded-l-none md:rounded-r-2xl shadow-xl text-center">
                                                    <h2 className={`text-xl md:text-2xl font-bold ${designStyles.textColor}`}>Valentine's E-Card</h2>
                                                    <p className={`mt-3 md:mt-4 text-base md:text-lg ${designStyles.messageStyle}`}>{message}</p>
                                                    <p className="mt-3 md:mt-4 text-xs md:text-sm font-semibold">- {sender}</p>
                                                    <p className="mt-3 md:mt-4 text-xs md:text-sm italic text-gray-600">{design}</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    {/* Enhanced Create Card Button */}
                                    <button
                                        onClick={() => window.location.href = '/'}
                                        className="mt-8 px-8 py-4 bg-white rounded-full shadow-lg
                                        hover:shadow-2xl hover:scale-105 active:scale-95
                                        transition-all duration-300 ease-in-out
                                       "
                                    >
                                        <span className="relative z-10">Create New Card</span>

                                    </button>
                                </div>
                            );
                        }
